"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã:
1. –ü–∞—Ä—Å–µ—Ä –º–µ–º–æ–≤ –∏–∑ Telegram-–∫–∞–Ω–∞–ª–æ–≤
2. Telegram-–±–æ—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
"""

import os
import sys
import subprocess
import time
from pathlib import Path
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def check_env_file():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è .env —Ñ–∞–π–ª–∞"""
    if not os.path.exists('.env'):
        print("‚ö†Ô∏è –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞—é –∏–∑ –æ–±—Ä–∞–∑—Ü–∞...")
        if os.path.exists('.env.example'):
            with open('.env.example', 'r', encoding='utf-8') as example:
                with open('.env', 'w', encoding='utf-8') as env_file:
                    env_file.write(example.read())
            print("‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω –∏–∑ –æ–±—Ä–∞–∑—Ü–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –µ–≥–æ —Å –≤–∞—à–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏.")
        else:
            print("‚ùå –§–∞–π–ª .env.example –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –≤—Ä—É—á–Ω—É—é.")
        return False
    return True

def check_directories():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –º–µ–º–æ–≤"""
    meme_dir = Path("memes")
    with_text_dir = meme_dir / "with_text"
    without_text_dir = meme_dir / "without_text"
    
    for directory in [meme_dir, with_text_dir, without_text_dir]:
        directory.mkdir(parents=True, exist_ok=True)
    
    print("‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –º–µ–º–æ–≤ –≥–æ—Ç–æ–≤—ã.")
    return True

def run_parser():
    """–ó–∞–ø—É—Å–∫ –ø–∞—Ä—Å–µ—Ä–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–º–æ–≤"""
    print("üöÄ –ó–∞–ø—É—Å–∫–∞—é –ø–∞—Ä—Å–µ—Ä –º–µ–º–æ–≤ –∏–∑ Telegram-–∫–∞–Ω–∞–ª–æ–≤...")
    try:
        subprocess.run([sys.executable, "parser.py"], check=True)
        print("‚úÖ –ü–∞—Ä—Å–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É.")
        return True
    except subprocess.CalledProcessError:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø–∞—Ä—Å–µ—Ä–∞.")
        return False

def run_bot():
    """–ó–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –º–µ–º–æ–≤"""
    print("ü§ñ –ó–∞–ø—É—Å–∫–∞—é Telegram-–±–æ—Ç–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –º–µ–º–æ–≤...")
    try:
        subprocess.run([sys.executable, "bot.py"], check=True)
        return True
    except subprocess.CalledProcessError:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞.")
        return False
    except KeyboardInterrupt:
        print("üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
        return True

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("=" * 50)
    print("üé≠ –°–∏—Å—Ç–µ–º–∞ —Å–±–æ—Ä–∞ –∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –º–µ–º–æ–≤")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    if not check_env_file():
        choice = input("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ .env? (y/n): ")
        if choice.lower() != 'y':
            return
    
    check_directories()
    
    while True:
        print("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
        print("1. –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–∞—Ä—Å–µ—Ä –º–µ–º–æ–≤ (—Å–æ–±—Ä–∞—Ç—å –Ω–æ–≤—ã–µ –º–µ–º—ã)")
        print("2. –ó–∞–ø—É—Å—Ç–∏—Ç—å Telegram-–±–æ—Ç–∞ (–ø—Ä–æ—Å–º–æ—Ç—Ä –∫–æ–ª–ª–µ–∫—Ü–∏–∏)")
        print("3. –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å—ë —Å—Ä–∞–∑—É (—Å–Ω–∞—á–∞–ª–∞ –ø–∞—Ä—Å–µ—Ä, –ø–æ—Ç–æ–º –±–æ—Ç)")
        print("4. –í—ã–π—Ç–∏")
        
        choice = input("–í–∞—à –≤—ã–±–æ—Ä (1-4): ")
        
        if choice == '1':
            run_parser()
        elif choice == '2':
            run_bot()
        elif choice == '3':
            run_parser()
            time.sleep(1)  # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—É—Å–∫–∞–º–∏
            run_bot()
        elif choice == '4':
            print("–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ! –í—ã—Ö–æ–¥...")
            break
        else:
            print("‚ö†Ô∏è –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\nüëã –ü—Ä–æ–≥—Ä–∞–º–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
    except Exception as e:
        print(f"\n‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
    finally:
        print("\n–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–≥—Ä–∞–º–º—ã.") 